{"version":3,"sources":["assets/img/dragndrop.png","pages/Home/Home.tsx","reportWebVitals.ts","index.tsx"],"names":["ReactGridLayout","WidthProvider","RGL","Home","useEffect","document","body","style","overflowX","typo","icon","faParagraph","title","w","h","type","default","faHeading","faQuoteRight","media","faImage","disabled","faPlay","faImages","useState","gridLayout","setGridLayout","showHover","setShowHover","draggedItem","setDraggedItem","window","addEventListener","keyPressHandler","addItem","item","newElement","i","length","toString","x","y","value","generateLayout","dragHandler","map","className","resizeHandles","onClick","index","filter","removeItem","getDiv","contentEditable","e","console","log","key","Container","fluid","Row","Col","md","src","dragImg","alt","onDrop","layout","layoutItem","_event","measureBeforeMount","isDroppable","rowHeight","draggable","onDragStart","dataTransfer","setData","onDrag","unselectable","Card","Math","random","alert","faTimes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48469ed1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dragndrop.418bfccc.png\";","import { faHeading, faImage, faImages, faParagraph, faPlay, faQuoteRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport RGL, { WidthProvider } from \"react-grid-layout\";\r\nimport dragImg from '../../assets/img/dragndrop.png';\r\nimport './Home.scss';\r\nconst ReactGridLayout = WidthProvider(RGL);\r\n\r\nfunction Home() {\r\n  useEffect(() => {\r\n    document.body.style.overflowX = 'hidden';\r\n  }, []);\r\n  const typo = [\r\n    { icon: faParagraph, title: \"Paragraph\", w: 6, h: 3, type: \"p\", default: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae blanditiis molestias hic est quod nesciunt quae alias assumenda commodi! Ratione similique error ab laboriosam placeat sed obcaecati neque minima soluta.\" },\r\n    { icon: faHeading, title: \"Heading\", w: 2, h: 2, type: \"h2\", default: \"Heading\" },\r\n    { icon: faQuoteRight, title: \"Blockquote\", w: 12, h: 4, type: \"bq\", default: \"This is a Blockquote\" },\r\n  ]\r\n  const media = [\r\n    { icon: faImage, title: \"Image\", w: 6, h: 2, type: \"img\", default: null, disabled: true },\r\n    { icon: faPlay, title: \"Video\", w: 2, h: 2, type: \"video\", default: null, disabled: true },\r\n    { icon: faImages, title: \"Gallery\", w: 12, h: 4, type: \"gallery\", default: null, disabled: true },\r\n  ]\r\n\r\n  const [gridLayout, setGridLayout] = useState<any[]>([]);\r\n\r\n  const [showHover, setShowHover] = useState(false)\r\n\r\n  const [draggedItem, setDraggedItem] = useState({\r\n    icon: '', title: '', w: 0, h: 0, type: '', default: '', disabled: false\r\n  });\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", keyPressHandler);\r\n    return () => {\r\n\r\n    }\r\n  }, [])\r\n  const generateTypoBlock = () => {\r\n    return typo.map((x, i) => {\r\n      return (<Col md=\"4\">\r\n        <div draggable=\"true\" onDragStart={(e) => e.dataTransfer.setData(\"text/plain\", \"\")} onDrag={() => { dragHandler(x) }} unselectable=\"on\"\r\n          key={(Math.random() * 100).toString()}>\r\n          <Card>\r\n            <FontAwesomeIcon icon={x.icon} />\r\n            <p>{x.title}</p>\r\n          </Card>\r\n        </div>\r\n      </Col>)\r\n    })\r\n  }\r\n  const generateTypoList = () => {\r\n    return typo.map((x) => {\r\n      return (\r\n        <li onClick={() => addItem(x)}>\r\n          <div key={(Math.random() * 100).toString()} className=\"d-flex align-items-center\">\r\n            <FontAwesomeIcon icon={x.icon} />\r\n            <p>{x.title}</p>\r\n          </div>\r\n        </li>)\r\n    })\r\n  }\r\n\r\n  const addItem = (item: any) => {\r\n    let newElement = { i: (gridLayout.length + 1).toString(), x: 0, y: 0, w: item.w, h: item.h, type: item.type, value: item.default }\r\n    setGridLayout([...gridLayout, newElement])\r\n    generateLayout()\r\n    setShowHover(false)\r\n  }\r\n\r\n  const dropHandler = (layout: any, layoutItem: any, _event: any) => {\r\n    let newElement = { i: (gridLayout.length + 1).toString(), x: layoutItem.x, y: layoutItem.y, w: draggedItem.w, h: draggedItem.h, type: draggedItem.type, value: draggedItem.default }\r\n    setGridLayout([...gridLayout, newElement])\r\n    generateLayout()\r\n  }\r\n\r\n\r\n  const dragHandler = (item: any) => {\r\n    setDraggedItem(item);\r\n  }\r\n\r\n  const generateMediaBlock = () => {\r\n    return media.map((x) => {\r\n      return (<Col md=\"4\">\r\n        <div draggable={x.disabled ? false : true} onClick={() => alert('Comming Soon..')} onDragStart={() => dragHandler(x)}\r\n          key={(Math.random() * 100).toString()}>\r\n          <Card className={x.disabled ? \"disabled\" : ''}>\r\n            <FontAwesomeIcon icon={x.icon} />\r\n            <p>{x.title}</p>\r\n          </Card>\r\n        </div>\r\n      </Col>)\r\n    })\r\n  }\r\n\r\n  const removeItem = (index: any) => {\r\n    let value = gridLayout.filter(x => x.i !== index)\r\n    setGridLayout(value);\r\n  }\r\n\r\n  const generateLayout = () => {\r\n    return gridLayout.map((item) => {\r\n      return (<div key={item.i} className=\"element\" data-grid={{ x: item.x, y: item.y, w: item.w, h: item.h, resizeHandles: ['sw', 'nw', 'se',] }}>\r\n        <button onClick={() => removeItem(item.i)} type=\"button\">\r\n          X\r\n        </button>\r\n        {getDiv(item.type, item.value)}\r\n      </div>)\r\n    })\r\n  }\r\n  const getDiv = (type: string, value: string) => {\r\n    if (type === 'p') {\r\n      return (<p contentEditable>\r\n        {value}\r\n      </p>)\r\n    };\r\n    if (type === 'h2') {\r\n      return (<h2 contentEditable>\r\n        {value}\r\n      </h2>)\r\n    };\r\n    if (type === 'bq') {\r\n      return (<blockquote contentEditable>\r\n        {value}\r\n      </blockquote>)\r\n    };\r\n  }\r\n\r\n  const keyPressHandler = (e: any) => {\r\n    console.log(e.key)\r\n    if (e.key === \"/\") {\r\n      setShowHover(true)\r\n    }\r\n    if (e.key === \"Escape\") {\r\n      setShowHover(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md=\"9\" className=\"workArea\">\r\n          {\r\n            gridLayout.length === 0 ?\r\n              <div className=\"dropArea\">\r\n                <img src={dragImg} alt=\"drop area\" />\r\n                <div className=\"heading\">\r\n                  Drop Area\r\n                </div>\r\n                <div className=\"muted\">\r\n                  Or press \"/\" to get options to add\r\n                </div>\r\n              </div>\r\n              : ''\r\n          } <ReactGridLayout\r\n            className=\"layout\"\r\n            onDrop={dropHandler}\r\n            measureBeforeMount={false}\r\n            isDroppable={true}\r\n            rowHeight={30}\r\n          >\r\n            {generateLayout()}\r\n          </ReactGridLayout>\r\n        </Col>\r\n        <Col md=\"3\" className=\"p-0\">\r\n          <div className=\"itemsArea\">\r\n            <div className=\"group\">\r\n              <div className=\"heading\">\r\n                Typography\r\n                <hr />\r\n              </div>\r\n              <div className=\"options\">\r\n                <Container>\r\n                  <Row>\r\n                    {generateTypoBlock()}\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            </div>\r\n            <div className=\"group\">\r\n              <div className=\"heading\">\r\n                Media\r\n                <hr />\r\n              </div>\r\n              <div className=\"options\">\r\n                <Container>\r\n                  <Row>\r\n                    {generateMediaBlock()}\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {\r\n        showHover ?\r\n          <div className=\"hoverOptions\">\r\n            <button className=\"close\" onClick={() => setShowHover(false)}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n            <Card>\r\n              <h6 >\r\n                Typography\r\n              </h6>\r\n              <hr />\r\n              <ul>\r\n                {generateTypoList()}\r\n              </ul>\r\n            </Card>\r\n          </div> : \"\"\r\n      }\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './pages/Home/Home';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}